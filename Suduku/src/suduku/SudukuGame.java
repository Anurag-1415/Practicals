/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package suduku;

import java.awt.Color;
import java.awt.GridLayout;
import java.awt.event.ActionListener;
import java.util.Arrays;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JTextField;
import javax.swing.JButton;
import javax.swing.Timer;
import javax.swing.border.Border;

/**
 *
 * @author andy
 */
public class SudukuGame extends javax.swing.JFrame {

    /**
     * Creates new form SudukuGame
     */
    String bannerText;
    int count = 0;
    String[][] solution;
    JTextField[][] cell;
    JTextField[][] sol;
    JButton viewSol;
    int grid; 
     
    public SudukuGame() {
        initComponents();
        updates.setText("HELLO!");
        Submit.setVisible(false);
        bannerText = jLabel3.getText();
        runBanner();
    }
    
    public void runBanner(){
        Timer t = new Timer(100,new ActionListener() {
             public void actionPerformed(java.awt.event.ActionEvent evt) {
                 
                 count+=1;
                 count=count%bannerText.length();
                 
                 jLabel3.setText(bannerText.substring(count) +" "+ bannerText.substring(0,count));
            }
        });
        t.start();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField2 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        gridsize = new javax.swing.JLabel();
        gridSize = new javax.swing.JTextField();
        Generate = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        updates = new javax.swing.JTextArea();
        Submit = new javax.swing.JButton();
        result = new javax.swing.JPanel();

        jTextField2.setText("jTextField2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setBackground(new java.awt.Color(153, 153, 255));
        jLabel1.setFont(new java.awt.Font("Liberation Sans", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Welcome To SUDUKU !");
        jLabel1.setOpaque(true);

        gridsize.setBackground(new java.awt.Color(51, 51, 51));
        gridsize.setFont(new java.awt.Font("Liberation Sans", 1, 15)); // NOI18N
        gridsize.setForeground(new java.awt.Color(204, 204, 255));
        gridsize.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        gridsize.setText("Enter the size of Grid :");
        gridsize.setOpaque(true);

        gridSize.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        gridSize.setToolTipText("");

        Generate.setBackground(new java.awt.Color(255, 204, 204));
        Generate.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        Generate.setText("Generate");
        Generate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GenerateActionPerformed(evt);
            }
        });

        jLabel3.setBackground(new java.awt.Color(102, 102, 102));
        jLabel3.setFont(new java.awt.Font("Nimbus Roman", 1, 15)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("This SUDUKU is generated by Anurag under the guidance of Akshay Fajge Sir @ SGGSIE&T.");
        jLabel3.setOpaque(true);

        jPanel2.setBackground(new java.awt.Color(204, 204, 204));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 8, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 13, Short.MAX_VALUE)
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        updates.setColumns(20);
        updates.setFont(new java.awt.Font("Liberation Sans", 1, 15)); // NOI18N
        updates.setLineWrap(true);
        updates.setRows(5);
        jScrollPane1.setViewportView(updates);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 205, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 138, Short.MAX_VALUE)
                .addContainerGap())
        );

        Submit.setBackground(new java.awt.Color(255, 51, 51));
        Submit.setFont(new java.awt.Font("Liberation Mono", 1, 15)); // NOI18N
        Submit.setText("Submit");
        Submit.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(255, 102, 153), new java.awt.Color(255, 204, 204), new java.awt.Color(204, 0, 102), new java.awt.Color(255, 0, 51)));
        Submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SubmitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout resultLayout = new javax.swing.GroupLayout(result);
        result.setLayout(resultLayout);
        resultLayout.setHorizontalGroup(
            resultLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 66, Short.MAX_VALUE)
        );
        resultLayout.setVerticalGroup(
            resultLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 13, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(gridsize, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(gridSize, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Generate)
                        .addGap(0, 49, Short.MAX_VALUE))
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(82, 82, 82)
                        .addComponent(Submit, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(result, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(69, 69, 69))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(41, 41, 41)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(145, 145, 145)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, 172, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(gridsize, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(gridSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(Generate))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(Submit, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(12, 12, 12)
                                .addComponent(result, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public boolean checkSol(int sol,int row,int col){
                  for(int c=0;c<col;c++){
                        if(solution[row][c] != null && sol == Integer.parseInt(solution[row][c])) return false;
                  }
                  
                  for(int r=0;r<row;r++){
                        if(solution[r][col] != null && sol == Integer.parseInt(solution[r][col])) return false;
                  }
                  
                  return true;
      }
    
    public void generateSol(){
        int sol=0;
            for(int row=0;row<grid;row++){
                for(int col=0;col<grid;col++){
                    do{
                        sol = (int) (System.nanoTime() % grid + 1);
                    }while (!checkSol(sol, row, col));
                    
                    solution[row][col] = String.valueOf(sol);
                    cell[row][col] = new JTextField(2);
                    cell[row][col].setText(String.valueOf(sol));
                    cell[row][col].setHorizontalAlignment(javax.swing.JTextField.CENTER);
                    cell[row][col].setEditable(false);
                    cell[row][col].setBackground(Color.PINK);
                }
            }
            generateGame();
    }
    
    public int generateRow(int cell){
        return cell/grid;
    }
    
    public int generateCol(int cell){
        return cell%grid;
    }
    
    public void generateGame(){
        int[] cells = new int[2 * grid];

        for(int i=0;i<cells.length;i++){
            cells[i] = (int)(System.nanoTime() % (grid * grid));
        }
        System.out.println("Cells: " + java.util.Arrays.toString(cells));
        cells = java.util.Arrays.stream(cells).distinct().toArray();
        System.out.println("Cells: " + java.util.Arrays.toString(cells));

        
        for(int i=0;i<cells.length;i++){
            int row = generateRow(cells[i]);
            int col = generateCol(cells[i]);
            try{
            cell[row][col].setText(" ");
            cell[row][col].setEditable(true);
             cell[row][col].setBackground(Color.YELLOW);
            }catch(java.lang.ArrayIndexOutOfBoundsException e){
                System.out.println(cells[i]);
            }
        }
        
        displayGame();
    }
    
    public void displayGame(){
        for(int i=0;i<grid;i++){
            for(int j=0;j<grid;j++){
                jPanel2.add(cell[i][j]);
                
            }
        }
        Submit.setVisible(true);
        jPanel2.revalidate();
        jPanel2.repaint();
        updates.setText("WoW! Looks good! Lets see how you can solve this!");
        updates.setEditable(false);
    }
    
    private void GenerateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GenerateActionPerformed
        // TODO add your handling code here:
        grid = Integer.parseInt(gridSize.getText());   
        jPanel2.removeAll();
        jPanel3.removeAll();
        jPanel3.setLayout(new GridLayout(1,2));
        jPanel3.add(updates);
        updates.setVisible(true);
        if(viewSol!=null) jPanel3.remove(viewSol);
             
        jPanel2.setLayout(new GridLayout(grid,grid));
        cell = new JTextField[grid][grid];
        solution =  new String[grid][grid];
        
        generateSol();
         System.out.println(java.util.Arrays.toString(solution[0]));
         System.out.println(java.util.Arrays.toString(solution[1]));
         System.out.println(java.util.Arrays.toString(solution[2]));
         System.out.println(java.util.Arrays.toString(solution[3]));
        
        
    }//GEN-LAST:event_GenerateActionPerformed

    public void checkResult(){
        
        
        for(int row=0;row<grid;row++){
            for(int col=0;col<grid;col++){
                if(cell[row][col].getText().isBlank()){
                    updates.setText("Please fill all the cells!");
                    return;
                }
                
                else if(!(cell[row][col].getText().trim()).equals(solution[row][col])) {
                    updates.setText("You lost the game!because your input at row no. " + (row+1) + " and col no. " + (col+1) + 
                        " do not satisfy the result!\nDo you wanna try again? (y/n) : ");
                    
                    updates.setEditable(true); 
                    
                    viewSol = new JButton("View Solution");
                    viewSol.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                     viewSolActionPerformed(evt);
                    }
                    });
                    
                    result.setLayout(new GridLayout(1,2));
                    result.add(viewSol);
                    //feedBack(updates.getText().substring(updates.getText().length()-1));
                    return;
                }
            }
        }
            
        updates.setText("Congrats! You won!Wanna play next round? (y/n) : ");
        updates.setEditable(true);
        //feedBack(updates.getText().substring(updates.getText().length()-1));
      }
    
    public void feedBack(String f){
         if(f.equals("y")) {
            updates.setText("Try this");
            try {
                Thread.sleep(1000);
            } catch (InterruptedException ex) {
                Logger.getLogger(SudukuGame.class.getName()).log(Level.SEVERE, null, ex);
            }
            generateGame();
        }else updates.setText("Thanks!");
    }
    
    private void SubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SubmitActionPerformed
        // TODO add your handling code here:
        checkResult();
    }//GEN-LAST:event_SubmitActionPerformed


    private void viewSolActionPerformed(java.awt.event.ActionEvent evt) {
        jPanel3.removeAll();
        updates.setVisible(false);
        jPanel3.setLayout(new GridLayout(grid,grid));
        sol = new JTextField[grid][grid];
        
                    
    for(int i=0;i<grid;i++){
        for(int j=0;j<grid;j++){
        sol[i][j] = new JTextField(2);
        sol[i][j].setText(solution[i][j]);
        sol[i][j].setHorizontalAlignment(javax.swing.JTextField.CENTER);
        sol[i][j].setEditable(false);
        sol[i][j].setBackground(Color.YELLOW);
        jPanel3.add(sol[i][j]);
            }
        }
         jPanel3.revalidate();
         jPanel3.repaint();
        viewSol.setVisible(false);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SudukuGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SudukuGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SudukuGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SudukuGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SudukuGame().setVisible(true);
            }
        });
    }
       
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Generate;
    private javax.swing.JButton Submit;
    private javax.swing.JTextField gridSize;
    private javax.swing.JLabel gridsize;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JPanel result;
    private javax.swing.JTextArea updates;
    // End of variables declaration//GEN-END:variables
}
